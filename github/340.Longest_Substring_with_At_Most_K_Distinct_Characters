340. Longest Substring with At Most K Distinct Characters

Given a string, find the length of the longest substring T that contains at most k distinct characters.

For example, Given s = “eceba” and k = 2,

T is "ece" which its length is 3.


class Solution {
    public int lengthOfLongestSubstringKDistinct(String s, int k) {
        if(k<1){
            return 0;
        }
        HashMap<Character, Integer> current = new HashMap();
        int max = 0;
        int cs = 0;
        int head=0;
        int tail=0;
        int len = s.length();
        while(tail<len&&head<=tail){
            if(current.size()<k || current.containsKey(s.charAt(tail))){
                if(current.containsKey(s.charAt(tail))){
                    current.put(s.charAt(tail), current.get(s.charAt(tail))+1);
                }else{
                    current.put(s.charAt(tail),1);
                }
                cs++;
                tail++;

            }else if(current.size()==0){
                cs++;
                current.put(s.charAt(tail),1);
                tail++;
            }else{
                int temp = current.get(s.charAt(head));
                if(temp>1){
                    current.put(s.charAt(head), temp-1);
                }else{
                    current.remove(s.charAt(head));
                }
                cs--;
                head++;
            }
            if(cs>max){
                max=cs;
            }
        }
        return max;
    }
}
