Given an array of integers, every element appears three times except for one, which appears exactly once. Find that single one.

Medium

Note:
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

public class Solution {
    public int singleNumber(int[] nums) {
        int one = 0;
        int two = 0;
        for(int i:nums){
            one = (one ^ i) & ~two;
            two = (two ^ i) & ~one;
        }
        return one;
    }
}
