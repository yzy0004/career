78. Subsets

Given a set of distinct integers, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

For example,
If nums = [1,2,3], a solution is:

[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]


class Solution(object):
    def subsets(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        queue=[[]]
        search=set()
        re=[]
        re.extend(queue)
        while len(queue[0])<len(nums):
            nqueue=[]
            for n in nums:
                for q in queue:
                    if n in q:
                        continue
                    nq=q+[n]
                    nq.sort()
                    if tuple(nq) not in search:
                        search.add(tuple(nq))
                        nqueue.append(nq)
                        
            re.extend(nqueue)
            queue=nqueue
        return re
