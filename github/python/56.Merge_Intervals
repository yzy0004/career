56. Merge Intervals

Given a collection of intervals, merge all overlapping intervals.

For example,
Given [1,3],[2,6],[8,10],[15,18],
return [1,6],[8,10],[15,18].

# Definition for an interval.
# class Interval(object):
#     def __init__(self, s=0, e=0):
#         self.start = s
#         self.end = e

class Solution(object):
    def merge(self, intervals):
        """
        :type intervals: List[Interval]
        :rtype: List[Interval]
        """
        if not intervals:
            return []
        start=0
        end=0
        intervals.sort(key=lambda n: n.start)
        start=intervals[0].start
        end=intervals[0].end
        re=[]
        for i in range(1,len(intervals)):
            inter = intervals[i]
            if inter.start<=end:
                end=max(inter.end,end)
            else:
                re.append(Interval(start,end))
                start=inter.start
                end=inter.end
                
        re.append(Interval(start,end))
        return re
