42. Trapping Rain Water




Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.

For example, 
Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.



class Solution(object):
    def trap(self, height):
        """
        :type height: List[int]
        :rtype: int
        """
        if len(height)<3:
            return 0
        lm=height[0]
        rm=height[-1]
        l=0
        r=len(height)-1
        water = 0
        while l<r-1:
            deep=0 
            if lm>rm:
                r-=1
                deep=height[r]
                rm = max(height[r],rm)
            else:
                l+=1
                deep=height[l]
                lm = max(height[l],lm)
            if deep<min(lm,rm):
                water+=min(lm,rm)-deep
        return water
                
        
Improvement:
class Solution(object):
    def trap(self, height):
        """
        :type height: List[int]
        :rtype: int
        """
        if len(height)<3:
            return 0
        lm=height[0]
        rm=height[-1]
        limit=min(lm,rm)
        l=0
        r=len(height)-1
        water = 0
        while l<r-1:
            deep=0 
            if lm>rm:
                r-=1
                deep=height[r]
                rm = max(height[r],rm)
            else:
                l+=1
                deep=height[l]
                lm = max(height[l],lm)
            limit=min(lm,rm)
            if deep<limit:
                water+=limit-deep
        return water
                
        
