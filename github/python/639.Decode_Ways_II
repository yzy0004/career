639. Decode Ways II

A message containing letters from A-Z is being encoded to numbers using the following mapping way:

'A' -> 1
'B' -> 2
...
'Z' -> 26
Beyond that, now the encoded string can also contain the character '*', which can be treated as one of the numbers from 1 to 9.

Given the encoded message containing digits and the character '*', return the total number of ways to decode it.

Also, since the answer may be very large, you should return the output mod 109 + 7.

Example 1:
Input: "*"
Output: 9
Explanation: The encoded message can be decoded to the string: "A", "B", "C", "D", "E", "F", "G", "H", "I".
Example 2:
Input: "1*"
Output: 9 + 9 = 18
Note:
The length of the input string will fit in range [1, 105].
The input string will only contain the character '*' and digits '0' - '9'.



class Solution(object):
    def numDecodings(self, s):
        """
        :type s: str
        :rtype: int
        """
        if not s:
            return 0
        m=10**9+7
        dp,dp1,dp2=1,0,0
        for c in s:
            if c=='*':
                ndp=dp*9+dp1*9+dp2*6
                ndp1=dp
                ndp2=dp
            else:
                ndp=(c>'0')*dp+dp1+(c<='6')*dp2
                ndp1=(c=='1')*dp
                ndp2=(c=='2')*dp
            dp,dp1,dp2=ndp%m,ndp1,ndp2
        return dp
