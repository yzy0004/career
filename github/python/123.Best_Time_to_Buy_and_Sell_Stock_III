123. Best Time to Buy and Sell Stock III

Say you have an array for which the ith element is the price of a given stock on day i.

Design an algorithm to find the maximum profit. You may complete at most two transactions.

Note:
You may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).

class Solution(object):
    def maxProfit(self, prices):
        """
        :type prices: List[int]
        :rtype: int
        """
        if not prices:
            return 0
        cash=[0]*2
        hold=[-prices[0]]*2
        hold[1]=-sys.maxint-1
        for i in range(1,len(prices)):
            cash[1]=max(cash[1],hold[1]+prices[i])
            hold[1]=max(hold[1],cash[0]-prices[i])
            cash[0]=max(cash[0],hold[0]+prices[i])
            hold[0]=max(hold[0],-prices[i])
        return max(cash)
