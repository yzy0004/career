257. Binary Tree Paths

Given a binary tree, return all root-to-leaf paths.

For example, given the following binary tree:

   1
 /   \
2     3
 \
  5
All root-to-leaf paths are:

["1->2->5", "1->3"]



# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def binaryTreePaths(self, root):
        """
        :type root: TreeNode
        :rtype: List[str]
        """
        if root is None:
            return []
        re=[]
        def path(node,route):
            if node.left is None and node.right is None:
                re.append('->'.join(route+[str(node.val)]))
            if node.left is not None:
                path(node.left,route+[str(node.val)])
            if node.right is not None:
                path(node.right,route+[str(node.val)])
                
        path(root,[])
        return re
