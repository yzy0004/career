33. Search in Rotated Sorted Array

Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

You are given a target value to search. If found in the array return its index, otherwise return -1.

You may assume no duplicate exists in the array.

class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        if not nums:
            return -1
        
        left,right=0,len(nums)-1
        if nums[-1]<nums[0]:
            while True:
                mid=left+(right-left)/2
                if mid==left:
                    break
                if nums[mid]<nums[-1]:
                    right=mid
                else:
                    left=mid
            if target<nums[0]:
                left=right
                right=len(nums)-1
            else:
                right=left
                left=0
        while left<=right:
            mid=(left+right)/2
            if nums[mid]==target:
                return mid
            elif nums[mid]>target:
                right=mid-1
            else:
                left=mid+1
        return -1
