270. Closest Binary Search Tree Value

Given a non-empty binary search tree and a target value, find the value in the BST that is closest to the target.

Note:
Given target value is a floating point.
You are guaranteed to have only one unique value in the BST that is closest to the target.


# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def closestValue(self, root, target):
        """
        :type root: TreeNode
        :type target: float
        :rtype: int
        """
        gap=abs(root.val-target)
        v=root.val
        while root:
            if abs(root.val-target)<gap:
                gap=abs(root.val-target)
                v=root.val
            if gap==0:
                return v
            elif root.val<target:
                root=root.right
            else:
                root=root.left
        return v
