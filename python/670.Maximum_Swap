670. Maximum Swap

Given a non-negative integer, you could swap two digits at most once to get the maximum valued number. Return the maximum valued number you could get.

Example 1:
Input: 2736
Output: 7236
Explanation: Swap the number 2 and the number 7.
Example 2:
Input: 9973
Output: 9973
Explanation: No swap.
Note:
The given number is in the range [0, 10**8]


class Solution(object):
    def maximumSwap(self, num):
        """
        :type num: int
        :rtype: int
        """
        nums = map(int, str(num))
        indexd={}
        for i,n in enumerate(nums):
            indexd[n]=i
        for i in range(len(nums)):
            for j in range(9,-1,-1):
                if j>nums[i] and j in indexd and indexd[j]>i:
                    nums[i],nums[indexd[j]]=j,nums[i]
                    return int(''.join(map(str,nums)))
        return num



class Solution(object):
    def maximumSwap(self, num):
        """
        :type num: int
        :rtype: int
        """
        nums = map(int, str(num))
        m=[nums[-1]]*len(nums)
        for i in range(len(nums)-2,-1,-1):
            m[i]=max(m[i+1],nums[i])
        for i in range(len(nums)):
            if m[i]!=nums[i]:
                for j in range(len(nums)-1,i,-1):
                    if nums[j]==m[i]:
                        nums[j],nums[i]=nums[i],nums[j]
                        return int(''.join(map(str,nums)))
        return num
