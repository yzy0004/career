23. Merge k Sorted Lists

Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.

# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def mergeKLists(self, lists):
        """
        :type lists: List[ListNode]
        :rtype: ListNode
        """
        q=[]
        head=ListNode(0)
        current=head
        for l in lists:
            if l:
                heapq.heappush(q,(l.val,l))
        while q:
            v,n=heapq.heappop(q)
            current.next=n
            current=current.next
            if n.next:
                heapq.heappush(q,(n.next.val,n.next))
        return head.next
