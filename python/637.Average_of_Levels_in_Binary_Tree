637. Average of Levels in Binary Tree

Given a non-empty binary tree, return the average value of the nodes on each level in the form of an array.
Example 1:
Input:
    3
   / \
  9  20
    /  \
   15   7
Output: [3, 14.5, 11]
Explanation:
The average value of nodes on level 0 is 3,  on level 1 is 14.5, and on level 2 is 11. Hence return [3, 14.5, 11].

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def averageOfLevels(self, root):
        """
        :type root: TreeNode
        :rtype: List[float]
        """
        if not root:
            return []
        level=[root]
        re=[]
        while level:
            nlevel=[]
            s=0.0
            count=0
            for n in level:
                s+=n.val
                count+=1
                if n.left:
                    nlevel.append(n.left)
                if n.right:
                    nlevel.append(n.right)
            re.append(s/count)
            level=nlevel
        return re
