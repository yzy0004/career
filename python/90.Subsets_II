90. Subsets II

Given a collection of integers that might contain duplicates, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

For example,
If nums = [1,2,2], a solution is:

[
  [2],
  [1],
  [1,2,2],
  [2,2],
  [1,2],
  []
]

class Solution(object):
    def subsetsWithDup(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        nums.sort()
        res=[[]]
        i=0
        while i<len(nums):
            count=0
            n=nums[i]
            while i<len(nums) and nums[i]==n:
                count+=1
                i+=1
            nl=[]
            for j in range(count):
                for sub in res:
                    nl.append(sub+[n]*(j+1))
            res.extend(nl)
        
        return res
