253. Meeting Rooms II

Given an array of meeting time intervals consisting of start and end times [[s1,e1],[s2,e2],...] (si < ei), find the minimum number of conference rooms required.

For example,
Given [[0, 30],[5, 10],[15, 20]],
return 2.


# Definition for an interval.
# class Interval(object):
#     def __init__(self, s=0, e=0):
#         self.start = s
#         self.end = e

class Solution(object):
    def minMeetingRooms(self, intervals):
        """
        :type intervals: List[Interval]
        :rtype: int
        """
        m=[]
        index=1
        for interval in intervals:
            m.append((interval.start,index))
            m.append((interval.end,-index))
            index+=1
        m.sort(key=lambda x:[x[0],x[1]])
        stack=[]
        maxroom=0
        for it in m:
            if it[1]>0:
                stack.append(it[1])
                maxroom=max(maxroom,len(stack))
            else:
                stack.remove(-it[1])
        return maxroom
