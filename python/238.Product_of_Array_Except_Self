238. Product of Array Except Self


Given an array of n integers where n > 1, nums, return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].

Solve it without division and in O(n).

For example, given [1,2,3,4], return [24,12,8,6].

Follow up:
Could you solve it with constant space complexity? (Note: The output array does not count as extra space for the purpose of space complexity analysis.)



class Solution(object):
    def productExceptSelf(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        product = 1
        countzero = 0
        zeroindex = -1
        for i,num in enumerate(nums):
            if num == 0:
                countzero+=1
                zeroindex=i
            else:
                product*=num
        if countzero >1:
            return [0]*len(nums)
        elif countzero >0:
            re = [0]*len(nums)
            re[zeroindex]=product
            return re
        else:
            re=[]
            for num in nums:
                re.append(product/num)
            return re
